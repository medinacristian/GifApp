{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","process","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAMhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAnBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCNZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEgBC,mCACvB,GACRC,EAJe,iDAIkCC,UAAUJ,GAJ5C,kBAGP,GAHO,oBAEgBE,oCAFhB,SAKFG,MAAMF,GALJ,cAKfG,EALe,gBAOEA,EAAKC,OAPP,uBAObC,EAPa,EAObA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbjB,kBAiBdM,GAjBc,4CAAH,sDCATO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEtC,OACE,sBAAKc,UAAU,2CAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCDEO,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAEdd,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAoBxC,OAbAC,qBAAU,WACRzB,EAAQC,GACLyB,MAAK,SAACC,GACLH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAKd,CAACrB,IAGGsB,EDhB0BK,CAAa3B,GAAhCc,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,wCAAd,SAAwDjB,IAEtDqB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEdZgB,EAAe,WAAO,IAAD,EAEI1C,mBAAS,CAAC,cAFd,mBAEzB2C,EAFyB,KAEb5C,EAFa,KAMhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEI4C,EAAWnB,KAAK,SAACV,GAAD,OACd,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MCfpB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5b8b435a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n  \n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => { // handleInputChange: Manejar valor de entrada\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if(inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats]);\n      setInputValue('');\n    }\n\n  };\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <input \n        type=\"text\"\n        value={inputValue}\n        onChange={ handleInputChange }\n      />\n    </form>\n  );\n};\n\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n};\n\n\n\n","\n\n  export const getGifs = async( category ) => {\n\n    const {REACT_APP_API_KEY: API_KEY} = process.env;\n    const limit = 10;\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=${limit}&api_key=${API_KEY}`;\n    const resp = await fetch(url);\n\n    const { data } = await resp.json();\n\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url\n      }\n    })\n\n    return gifs;\n\n  }","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n\n  return (\n    <div className=\"card animate__animated animate__fadeInUp\">\n      <img src={ url } alt={ title } />\n      <p>{ title }</p>\n    </div>\n  )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\n\n\nexport const GifGrid = ({ category }) => {\n  \n  const { data: images, loading} = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeInDown\">{ category }</h3>\n\n      { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n\n      <div className=\"card-grid\">\n          {\n            images.map((img) => (\n              <GifGridItem \n                key={img.id}  \n                {...img}\n              />\n            ))\n          }\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGifs(category)\n      .then((imgs) => {\n        setState({\n          data: imgs,\n          loading: false\n        });\n\n    });\n\n  }, [category]);\n\n\n  return state;\n\n};","import React, { useState } from 'react';\n\n\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['Samurai X']);\n\n\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={ setCategories }/>\n      <hr />\n\n\n      <ul>\n        {\n          categories.map( (category) => (\n            <GifGrid \n              key={ category }\n              category={ category } \n            />\n          ))\n        }\n      </ul>\n\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}